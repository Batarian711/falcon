input SubjectInput {
    code: String
    name: String
    faculties: [ID!]
}

input CourseInput {
    code: String
    name: String
}

input ClassInput {
    subject: String
    meetingDays: MeetingDay
    meetingHours: String
    room: String
    enrollmentCap: Int
    course: CourseInput
}

type SubjectMutations {
    create(newSubject: SubjectInput!): Subject!
    update(_id: ID!, newSubject: SubjectInput!): Subject!
}

type CourseMutations {
    create(newCourse: CourseInput!): Course!
    update(_id: ID!, newCourse: CourseInput!): Course!
}

type AcademicYearMutations {
    create(startYear: Int!): AcademicYear!
    setTermClasses(academicYearId: ID!, term: YearTerm!, classes: [ClassInput!]!): [Class!]!
}

type ClassMutations {
    create(newClass: ClassInput!): Class!
    remove(classId: ID!): Boolean!
}

extend type Mutation {
    subject: SubjectMutations!
    course: CourseMutations!
    academicYear: AcademicYearMutations!
    class(academicYearId: ID!, term: YearTerm!): ClassMutations!
}